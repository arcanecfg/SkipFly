<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>